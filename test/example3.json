{"packages":[{"mainScript":"cerny","path":"","fqName":"CERNY","scripts":[{"fqName":"CERNY","documentation":["This is the file that provides the core functionality of the Cerny.js library: interception, type checking, logging, dependency declaration, configuration and dictionaries.","To use the Cerny.js library this file must be included in your page. The configuration file (a copy of cerny.conf.js) must be included beforehand.","Some conventions used:","If a current function or member is overwritten in a script, e.g. 'insertBefore', but will be referred to later, the new name of the member is composed of an underscore followed by the old name, e.g. '_insertBefore'.","If a simple name is not possible due to keyword restrictions, the name is proceeded by an underscore, e.g. '_delete'.","If a function takes arbitrarily many arguments, the documentation for these parameters must be called 'arguments'.","If the documentation for a function does not specify a return value, the function returns undefined."],"history":[{"entry":"Added additional parameter (interceptors) to CERNY.intercept.","date":"2007-03-16"},{"entry":"Added additional parameter (interceptors) to CERNY.method.","date":"2007-03-15"},{"entry":"Added signature, checkType and the TypeChecker interceptor.","date":"2007-03-11"},{"entry":"Added layout and appenders to CERNY.Logger.","date":"2007-03-02"},{"entry":"Moved loggers from CERNY to CERNY.Logger.","date":"2007-03-01"},{"entry":"Fixed bug in intercept, which caused objects to be intercepted.","date":"2007-02-08"},{"entry":"Added the interceptor concept.","date":"2006-12-31"},{"entry":"Added the dumpVar method.","date":"2006-12-30"},{"entry":"Created.","date":"2006-11-10"}],"creationDate":" 2006-11-10","author":"Robert Cerny","uses":[],"modificationDate":" 2007-03-17","functions":[{"fqName":"CERNY.object","parameters":[{"type":"object","name":"obj","documentation":"the object to be the prototype of the new object."}],"returnValue":"the new object","name":"object","documentation":["Prototypal inheritance [DCP]."],"returnType":"object"},{"fqName":"CERNY.method","parameters":[{"type":"object","name":"obj","documentation":"the obj to attach the function to"},{"type":"string","name":"name","documentation":"the name under which the function will be known to the object"},{"type":"function","name":"func","documentation":"the function to attach"},{"type":"undefined,Array","name":"interceptors","documentation":"the interceptors to use; defaults to CERNY.Configuration.Interception.active"}],"name":"method","documentation":["Attach a function as a method to an object. This allows to create arbitrarliy many functions around the actual function. It aims for separation of concerns. The interceptors are wrapped around the function starting with the last one. This allows a \"natural order\", when filling the array regarding dependency. So more basic interceptors (e.g. LogIndenter) are pushed first."]},{"fqName":"CERNY.signature","parameters":[{"type":"function","name":"func","documentation":"the function to specify the signature for"},{"type":"string,function,array","name":"returnType","documentation":"the type of the return value"},{"type":"undefined,string,function,array","name":"arguments","documentation":"the types of the parameters"}],"name":"signature","documentation":["Specify the signature of a function. The types can be specified either by a string (\"boolean\", \"string\", \"number\", \"object\", \"function\", \"undefined\", \"null\", \"any\") or by a function, against which the actual value will be tested against with instanceof.","In the future it should be possible to specify an object as a type and the prototype chain is inspected for that object. Even more in the future it Cerny schemas could be used."]},{"fqName":"CERNY.dump","parameters":[{"type":"any","name":"value","documentation":"the value to dump"}],"returnValue":"a string useful for logging","name":"dump","documentation":["Dump a value for logging purposes. Returns the value of the variable followed by it's type in braces. If the variable is a string, the value is enclosed by a single quote."],"returnType":"string"},{"fqName":"CERNY.Logger","parameters":[{"type":"string","name":"name","documentation":"the name of the category"}],"returnValue":"the logger for the category identified by name","name":"Logger","documentation":["Create a logger. For every category there exists exactly one logger."],"returnType":"object"},{"fqName":"CERNY._intercept","parameters":[{"type":"object,function","name":"obj","documentation":"the object to intercept methods of"},{"type":"undefined,string,RegExp,Array","name":"arguments","documentation":"strings or regexps specifying which functions to intercept. If none are specified all functions are intercepted; or an array of interceptors, if not present configured interceptors are used, if more than one array is given, the last one will be used."}],"returnValue":"an array of the names of the intercepted functions","name":"intercept","documentation":["Instrument methods of an object for interception. Can be called multiple times with the same effect, only depending on CERNY.Configuration.Interception.active or the passed interceptors.","This function does not work on the window object in IE."],"returnType":"Array"},{"fqName":"CERNY._namespace","parameters":[{"type":"string","name":"name","documentation":"The name of the namespace to create"},{"type":"undefined,object","name":"parentNameSpace","documentation":"The parent name space"}],"name":"namespace","documentation":["Create a namespace in CERNY. This function is inspired by the Yahoo! UI Library [YUI]."]},{"fqName":"CERNY._joinFunctions","parameters":[{"type":"function","name":"arguments","documentation":"the functions to join"}],"returnValue":"the new function","name":"joinFunctions","documentation":["Join functions into one function. The new function returns the return value of the last function.","Useful for extending event handlers on popular objects (like window)."],"returnType":"function"},{"fqName":"CERNY._isPresent","parameters":[{"type":"string","name":"exp","documentation":"the expression to check, a string"}],"returnValue":"false, if the string does not reference anything or the string references 'undefined'","name":"isPresent","documentation":["Check whether an expression is present during runtime."],"returnType":"boolean"},{"fqName":"CERNY._require","parameters":[{"type":"string","name":"script","documentation":"the script that requires the expression"},{"type":"undefined,string","name":"arguments","documentation":"the exressions that are required for further execution"}],"returnValue":"an array of missing expressions with 0 or more items","name":"require","documentation":["Check for the presence of expressions."],"returnType":"Array"},{"fqName":"CERNY._load","parameters":[{"type":"undefined,string","name":"location","documentation":"the name of the script to load"}],"name":"load","documentation":["Load a script. This function is called in require. It has different implementations in various environments (browser, Rhino [RHI])."]},{"fqName":"CERNY.Dictionary","parameters":[{"type":"object","name":"obj","documentation":"the obj this dictionary will inherit from"}],"returnValue":"a Dictionary object","name":"Dictionary","documentation":["Dictionary maker.","A dictionary is a mapping from terms to definitions. Definitions may contain nested terms. The process of evaluating a term is done by lookup."],"returnType":"object"},{"fqName":"CERNY.Dictionary_lookup","parameters":[{"type":"string","name":"term","documentation":"the term to lookup"}],"returnValue":"the value of the term in the dictionary or undefined if the term is unknown","name":"lookup","documentation":["Lookup a term in this dictionary."],"returnType":"undefined,string"}],"name":"cerny"}]},{"mainScript":"DateFormat","path":"text","fqName":"CERNY.text","scripts":[{"fqName":"CERNY.text.DateFormat","documentation":["DateFormat provides means to format a date."],"history":[{"entry":"Added signatures.","date":"2007-03-15"},{"entry":"Removed the new in the DataFormat creations.","date":"2007-03-09"},{"entry":"Created.","date":"2006-07-02"}],"creationDate":" 2006-07-02","author":"Robert Cerny","uses":["CERNY.util"],"modificationDate":" 2007-03-17","functions":[{"fqName":"CERNY.text.DateFormat","parameters":[{"type":"RegExp","name":"regexp","documentation":"the regular expression defining the date format"}],"returnValue":"an object representing the date format","name":"DateFormat","documentation":["Create a date format."],"returnType":"object"}],"name":"DateFormat"},{"fqName":"CERNY.text.NumberFormat","documentation":["NumberFormat provides means to format a number."],"history":[{"entry":"Added signatures.","date":"2007-03-15"},{"entry":"Created.","date":"2006-07-03"}],"creationDate":" 2006-07-03","author":"Robert Cerny","uses":["CERNY.util","CERNY.text"],"modificationDate":" 2007-03-17","functions":[{"fqName":"CERNY.text.NumberFormat","parameters":[],"returnValue":"an object representing the number format","name":"NumberFormat","documentation":["Create a number format."]}],"name":"NumberFormat"}]},{"mainScript":"util","path":"util","fqName":"CERNY.util","scripts":[{"fqName":"CERNY.util","documentation":["Some general purpose utility functions."],"history":[{"entry":"Added signatures.","date":"2007-03-15"},{"entry":"Fixed bug in CERNY.parseUri (Result of \"dev/\".split(/\\//) differs in IE and Firefox).","date":"2007-02-23"},{"entry":"Added logger to CERNY.util.","date":"2007-02-23"},{"entry":"Added getNameFromFqName.","date":"2007-02-19"},{"entry":"Added parseUri.","date":"2007-02-09"},{"entry":"Created.","date":"2006-11-12"}],"creationDate":" 2006-11-12","author":"Robert Cerny","uses":["CERNY.js.String"],"modificationDate":" 2007-03-17","functions":[{"fqName":"CERNY.util.indent","parameters":[{"type":"string","name":"indentation","documentation":"the number of spaces to append to the line feed"}],"returnValue":"a string","name":"indent","documentation":["Create an indentation string, a line feed followed by n spaces, where n = indentation."],"returnType":"string"},{"fqName":"CERNY.util.fillNumber","parameters":[{"type":"number","name":"number","documentation":"the number to fill"}],"returnValue":"the filled number","name":"fillNumber","documentation":["Return (at least) two digit number as a String. If number smaller than 10 return \"0\" + number."],"returnType":"string"},{"fqName":"CERNY.util.cutNumber","parameters":[{"type":"number","name":"number","documentation":"the number to get the digits from"},{"type":"number","name":"n","documentation":"how many digits to get"}],"returnValue":"the last n digits","name":"cutNumber","documentation":["Return the last n digits from the decimal String representation of number."],"returnType":"string"},{"fqName":"CERNY.util.parseUri","parameters":[{"type":"string","name":"uri","documentation":"the uri to parse"}],"returnValue":"an object containing the parts of the uri","name":"parseUri","documentation":["Parses an URI into its components.","Right now it cannot handle: \"mailto:mduerst@ifi.unizh.ch\" \"news:comp.infosystems.www.servers.unix\""],"returnType":"object"},{"fqName":"CERNY.util.getNameFromFqName","parameters":[{"type":"string","name":"fqName","documentation":"the fully qualified name"}],"returnValue":"the short name","name":"getNameFromFqName","documentation":["Return the short name from a fully qualified name."],"returnType":"string"}],"name":"util"}]}],"namespace":"CERNY","name":"Cerny.js","version":{"major":1,"bugfix":0,"minor":2}}
